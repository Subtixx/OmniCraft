on:
  push:
    branches: [ "main", "develop", "release/*" ]
  pull_request:
    branches: [ "main", "develop", "release/*" ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Cache Gradle
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4.3.0
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.1
        with:
          gradle-version: '8.8'

      - name: Build with Gradle
        run: gradle build
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read
      security-events: write
      actions: read
    steps:
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin

      - run: gradle test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref_name, 'release/')
    needs: build
    permissions:
      contents: write
      packages: write
    steps:
      - uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: omni-craft
          modrinth-featured: true
          modrinth-unfeature-mode: subset
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          #curseforge-id: 394468
          #curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref_name, 'release/')
    needs: build
    permissions:
      contents: write
      packages: write
    steps:
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md